
# Copyright (c) 2022, Alibaba Group Holding Limited
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#


# compile
FROM polardb_pg/polardb_pg_base:1.0-SNAPSHOT AS builder

ENV POLAR_BUILD_DIR=/home/postgres/polardb_pg
ARG POLAR_SOURCE_DIR=polardb_pg

USER root

ARG BUILD_ARGS="--disable-rpath \
    --with-segsize=128 \
    --with-tclconfig=/usr/lib64 \
    --with-openssl \
    --with-libxml \
    --with-system-tzdata=/usr/share/zoneinfo \
    --with-perl \
    --with-uuid=e2fs \
    --enable-thread-safety \
    --with-readline \
    --with-python \
    --with-tcl \
    --with-pam \
    --with-gssapi \
    --enable-nls \
    --with-libxslt \
    --with-ldap \
    --with-llvm \
    --enable-polar-px \
    --with-pfsd \
    --with-dma \
    --with-includes=/usr/local/openssl/include"

ARG DEV_PKG=

COPY ${POLAR_SOURCE_DIR} ${POLAR_BUILD_DIR}

RUN cd ${POLAR_BUILD_DIR} && \
    source /etc/bashrc && \
    source /root/.bashrc && \
    export CFLAGS="-g -O3 -fno-omit-frame-pointer -I/usr/include/et -DLINUX_OOM_SCORE_ADJ=0 -DLINUX_OOM_ADJ=0 -DMAP_HUGETLB=0x40000 -pipe -Wall -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64" && \
    export CXXFLAGS="-g -O3 -fno-omit-frame-pointer -I/usr/include/et -pipe -Wall -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64" && \
    export LDFLAGS="-Wl,-rpath,'\$\$ORIGIN/../lib'" && \
    export OPENSSL_ROOT_DIR=/usr/local/openssl && \
    export OPENSSL_LIBRARIES=/usr/local/openssl/lib/ && \
    export LANG=en_US.UTF-8 && \
    export AR=gcc-ar && export NM=gcc-nm && export RANLIB=gcc-ranlib && \
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/rh/llvm-toolset-7.0/root/usr/lib64:/opt/rh/devtoolset-9/root/usr/lib64:/opt/rh/devtoolset-9/root/usr/lib:/opt/rh/devtoolset-9/root/usr/lib64/dyninst:/opt/rh/devtoolset-9/root/usr/lib/dyninst && \
    export PATH=$PATH:/opt/rh/llvm-toolset-7.0/root/usr/bin:/opt/rh/llvm-toolset-7.0/root/usr/sbin:/opt/rh/devtoolset-9/root/usr/bin && \
    bash ./configure --prefix=${POLAR_BUILD_DIR}/cache --with-pgport=5432 ${BUILD_ARGS} && \
    if [[ -d ${POLAR_BUILD_DIR}/cache/bin ]]; then make clean; fi && \
    cd ${POLAR_BUILD_DIR} && \
    make -j 64 install && \
    make -j 64 -C contrib install && \
    make -j 64 -C external install


FROM polardb_pg/polardb_pg_base:1.0-SNAPSHOT


ARG CodeSource=
ARG CodeBranch=
ARG CodeVersion=
ARG PolarSource=
ARG PolarBranch=
ARG PolarVersion=
ARG BuildBy=

ENV INITDB_USER=postgres
ENV PYTHONPATH=/docker_script
ENV POLARDB_BASE_DIR=/u01/polardb_pg
ENV PATH=${PATH}:${POLARDB_BASE_DIR}/bin
ARG BASE_PKG=

USER root

ENTRYPOINT ["python", "/docker_script/pg_tasks/supervisor.py"]
CMD ["su", "-l", "${INITDB_USER}", "-c", "\"/u01/polardb_pg/bin/postgres -D /data\""]

COPY --from=builder /home/postgres/polardb_pg/cache/ ${POLARDB_BASE_DIR}
COPY --from=builder /usr/local/openssl /usr/local/openssl

COPY rootfs/polardb_docker_script /docker_script
COPY rootfs/postgresql.conf.sample.polardb_pg /postgresql.conf.demo
COPY rootfs/recovery.conf.demo /
COPY docker/init.sh /init.sh
COPY rootfs/bin/shutdown_cleanup.sh /shutdown_cleanup.sh

RUN chmod -R +x /docker_script && \
    chmod 666 /postgresql.conf.demo && cat /init.sh >> /etc/bashrc && \
    cp /usr/local/openssl/lib/libcrypto.so.1.1 /usr/lib64/ && cp /usr/local/openssl/lib/libssl.so.1.1 /usr/lib64/ && \
    ln -sf /usr/lib64/libcrypto.so.1.1 /usr/lib64/libcrypto.so && ln -sf /usr/lib64/libssl.so.1.1 /usr/lib64/libssl.so && \
    yum clean all

LABEL CodeSource=$CodeSource CodeBranch=$CodeBranch CodeVersion=$CodeVersion \
    PolarSource=$PolarSource PolarBranch=$PolarBranch PolarVersion=$PolarVersion BuildBy=$BuildBy

